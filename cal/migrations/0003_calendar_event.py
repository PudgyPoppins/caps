# Generated by Django 3.0.3 on 2020-02-29 18:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('network', '0003_auto_20200128_2104'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cal', '0002_delete_event'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isGlobal', models.BooleanField(default=False)),
                ('excluded_calendars', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='excludedcal', to='cal.Calendar')),
                ('network', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.Network')),
                ('network_calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='networkcal', to='cal.Calendar')),
                ('nonprofit', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.Nonprofit')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_calendar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usercal', to='cal.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', help_text='What is the name of the event?', max_length=75)),
                ('description', models.CharField(default='', help_text='Describe the event briefly. What type of work will be done?', max_length=500)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='starting time')),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='ending time')),
                ('all_day', models.BooleanField(default=False, help_text='will this event last the entire day', verbose_name='all day?')),
                ('recurrence', models.CharField(blank=True, help_text='Will this event ever repeat?', max_length=200, null=True)),
                ('event_type', models.CharField(choices=[('VO', 'Volunteering Opportunity'), ('AA', 'Account Anniversary'), ('CE', 'Community Event'), ('NV', 'Non-Volunteering Event')], default='NV', help_text='What type of event will this be?', max_length=2)),
                ('sign_up_slots', models.IntegerField(blank=True, help_text='What is the maximum number of people that will be at this event?', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('attendees', models.ManyToManyField(blank=True, related_name='attendees', to=settings.AUTH_USER_MODEL)),
                ('calendar', models.ManyToManyField(default='', to='cal.Calendar')),
                ('nonprofit_reps', models.ManyToManyField(blank=True, related_name='nonreps', to=settings.AUTH_USER_MODEL)),
                ('verified', models.ForeignKey(blank=True, help_text='has a nonprofit representative verified this network?', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
    ]
